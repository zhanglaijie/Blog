<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"  
    xsi:schemaLocation="http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/data/mongo  
        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
    
    <!-- http://blog.sina.com.cn/s/blog_872758480100wtfh.html
    	激活spring的注解.不需要添加 原因如上  
   		 <context:annotation-config />  
     -->
       
    <!-- 加载mongodb的属性配置文件 -->
       
    <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.For example @Controller and @Service . Make sure to set the correct base-package-->  
    <context:component-scan base-package="top.laijie.blogs">  

		<context:include-filter type="aspectj" expression="top.laijie.blogs.service.*"/>   
		<context:include-filter type="aspectj" expression="top.laijie.blogs.controller.*"/>   
   </context:component-scan>  
    <!-- 
    <context:component-scan base-package="com.founder.publisher.controller.*" />  
    <context:component-scan base-package="com.founder.publisher.service.*" />
      -->  
    <!-- Configures the annotation-driven Spring MVC Controller programming model.Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->  
    <mvc:annotation-driven />   
          
   <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 
    <mongo:mongo id="mongo" replica-set="${mongo.hostport}">
        <mongo:options
             connections-per-host="${mongo.connectionsPerHost}"
             threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
             connect-timeout="${mongo.connectTimeout}"
             max-wait-time="${mongo.maxWaitTime}"
             auto-connect-retry="${mongo.autoConnectRetry}"
             socket-keep-alive="${mongo.socketKeepAlive}"
             socket-timeout="${mongo.socketTimeout}"
             slave-ok="${mongo.slaveOk}"
             write-number="1"
             write-timeout="0"
             write-fsync="true"/>        
    </mongo:mongo>
    <mongo:db-factory dbname="database" mongo-ref="mongo" />
    -->
    <!-- Default bean name is 'mongo' -->
    <mongo:mongo host="127.0.0.1" port="27017"/>
     
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo" />
        <constructor-arg name="databaseName" value="Blogs" />
    </bean>    
    <!-- Web服务器的defaultServlet来处理静态文件 -->  
    <mvc:default-servlet-handler/> 
</beans>